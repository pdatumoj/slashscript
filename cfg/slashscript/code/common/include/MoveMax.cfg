//Movement configuration including null-cancelling and max jumping

//Basic initializations for code relating to resuming motion after release of opposing key
alias "SlashComMoveResumeForward"	""
alias "SlashComMoveResumeBack"		""
alias "SlashComMoveResumeLeft"		""
alias "SlashComMoveResumeRight"		""

//Intialize crouch contact/toggle overlap (this is probably wrong - pending testing to revise)
alias "SlashComMoveResumeStand"		"-duck"

//Which front/back movement to check for resumption (via the Maybe variant) on jump key release
alias "SlashComMoveResumeWhich"		""

//Initialize "Maybe" front/back movement variants (which will later be maintained by the jump key operations)
alias "SlashComMoveMaybeForward"	"+forward"
alias "SlashComMoveMaybeBack"		"+back"

//Initialize "Maybe" crouch variant (which will, again, be managed by jump key operations)
// in this case it's the uncrouch we care about, since max jumps rely on being crouched while flying
alias "SlashComMoveMaybeUncrouch"	"-duck"

//Use the non-locking (non-toggle) version of crouching to implementing the locking (toggle) version to keep jump key integration cleaner
alias "SlashComMoveCrouchLock"		"+SlashComMoveCrouch; alias +SlashComMoveToggleCrouch SlashComMoveCrouchUnlock"
alias "SlashComMoveCrouchUnlock"	"-SlashComMoveCrouch; alias +SlashComMoveToggleCrouch SlashComMoveCrouchLock"


//Standard null-cancelling front/back code, except that this integrates with the jumping mechanics to maintain which is being pressed
// so that when jumping mutes it, it can be properly reactivated in the live state at jump-key release.
// key down ...
alias "+SlashComMoveForward"		"-back; SlashComMoveMaybeForward; alias SlashComMoveResumeForward SlashComMoveMaybeForward; alias SlashComMoveResumeWhich SlashComMoveResumeForward"
alias "+SlashComMoveBack"		"-forward; SlashComMoveMaybeBack; alias SlashComMoveResumeBack SlashComMoveMaybeBack; alias SlashComMoveResumeWhich SlashComMoveResumeBack"
// key up ...
alias "-SlashComMoveForward"		"-forward; SlashComMoveResumeBack; alias SlashComMoveResumeForward;"
alias "-SlashComMoveBack"		"-back; SlashComMoveResumeForward; alias SlashComMoveResumeBack;"


//Vanilla null-cancelling left/right code
alias "+SlashComMoveLeft"		"-moveright; +moveleft; alias SlashComMoveResumeLeft +moveleft"
alias "-SlashComMoveLeft"		"-moveleft; SlashComMoveResumeRight; alias SlashComMoveResumeLeft;"
alias "+SlashComMoveRight"		"-moveleft; +moveright; alias SlashComMoveResumeRight +moveright"
alias "-SlashComMoveRight"		"-moveright; SlashComMoveResumeLeft; alias SlashComMoveResumeRight;"

//Non-locking crouch code, which is slightly more complicated, as it has to integrate with the jump key operations (thus the "Maybe" variant)
// (this may be wrong regarding the ResumeStand part - which should probably instead be aliased to MaybeUncrouch)
alias "+SlashComMoveCrouch"		"+duck; alias SlashComMoveResumeStand;"
alias "-SlashComMoveCrouch"		"SlashComMoveMaybeUncrouch; alias SlashComMoveResumeStand -duck"



//The big, scary, nasty jump key operations!

//So, when you hit it, this activates jumping, then ducking, and disables forward and backward keypresses, then clears local move states
// for forward, back, and crouch too.
alias "+SlashComMoveJump"		"+jump; +duck; -forward; -back; alias SlashComMoveMaybeForward; alias SlashComMoveMaybeBack; alias SlashComMoveMaybeUncrouch;"

//When released, it tries to honor the desired crouch state, per the junction of crouch and crouch toggle (lock), then it stops the jump operation
// (though when, in particular, that happens is only relevant in terms of other variable juggling), then it re-enables forward and backward command inputs.
//  With that done, it attempts to trigger whichever of them (if either) is active and then sets crouching back to a normal state.
alias "-SlashComMoveJump"		"SlashComMoveResumeStand; -jump; alias SlashComMoveMaybeForward +forward; alias SlashComMoveMaybeBack +back; SlashComMoveResumeWhich; alias SlashComMoveMaybeUncrouch -duck;"



//Initialization of crouch toggle state
alias "-SlashComMoveToggleCrouch"	""
SlashComMoveCrouchUnlock

//Announce state
echo ""
echo " #   # #   # #   #   #   #   # "
echo " ## ## #   # ## ##  # #   # #  "
echo " # # # #   # # # # #####   #   "
echo " #   #  # #  #   # #   #  # #  "
echo " #   #   #   #   # #   # #   # "

